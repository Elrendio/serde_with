// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.202.5/containers/rust
{
    "name": "Rust",
    "build": {
        "dockerfile": "Dockerfile",
        "args": {
            // Use the VARIANT arg to pick a Debian OS version: buster, bullseye
            // Use bullseye when on local on arm64/Apple Silicon.
            "VARIANT": "bullseye"
        }
    },
    "runArgs": [
        "--init",
        "--cap-add=SYS_PTRACE",
        "--security-opt",
        "seccomp=unconfined",
        "--security-opt",
        "label=disable"
    ],

    // Set *default* container specific settings.json values on container create.
    "settings": {
        "lldb.executable": "/usr/bin/lldb",
        // VS Code don't watch files under ./target
        "files.watcherExclude": {
            "**/target/**": true
        },

        // Cargo command to use for cargo check.
        "rust-analyzer.checkOnSave.command": "clippy",
        // Enable support for procedural macros, implies #rust-analyzer.cargo.runBuildScripts#.
        "rust-analyzer.procMacro.enable": true,
        // Activate all available features (--all-features).
        "rust-analyzer.cargo.allFeatures": true,
        // Check all targets and tests (--all-targets).
        "rust-analyzer.checkOnSave.allTargets": true,
        // The path structure for newly inserted paths to use.
        //
        // self: Insert import paths relative to the current module, using up to one `super` prefix
        // if the parent module contains the requested item. Prefixes `self` in front of the path if it starts with a module.
        "rust-analyzer.assist.importPrefix": "self",
        // How imports should be grouped into use statements.
        // module: Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.
        "rust-analyzer.assist.importGranularity": "module",
        // Group inserted imports by the following order. Groups are separated by newlines.
        "rust-analyzer.assist.importGroup": false,
    },

    // Add the IDs of extensions you want installed when the container is created.
    "extensions": [
        "cschleiden.vscode-github-actions",
        "github.codespaces",
        "github.vscode-pull-request-github",
        "matklad.rust-analyzer",
        "ms-vsliveshare.vsliveshare",
        "redhat.vscode-yaml",
        "tamasfe.even-better-toml",
        "vadimcn.vscode-lldb",
    ],

    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],

    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "pre-commit install --install-hooks",

    // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    // "remoteUser": "vscode",

    // Features to add to the dev container.
    "features": {
        "git": "os-provided",
        "github-cli": "latest",
    }
}
